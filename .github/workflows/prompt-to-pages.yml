name: Prompt to Pages

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      prompt:
        description: "Manual prompt"
        required: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    # Run on any comment that contains "/deploy", or on manual dispatch
    if: github.event_name != 'issue_comment' || contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Extract the prompt from an issue comment or manual input
      - name: Derive prompt
        id: derive
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            RAW="${{ github.event.comment.body }}"
            # Everything after "/deploy" (trim spaces)
            PROMPT="$(sed -n 's#.*\/deploy[[:space:]]*##p' <<<"$RAW")"
          else
            PROMPT="${{ github.event.inputs.prompt }}"
          fi
          {
            echo 'prompt<<EOF'
            printf '%s\n' "$PROMPT"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"
          echo "Derived prompt:"
          printf '%s\n' "$PROMPT"

      - name: Build site
        shell: bash
        run: |
          set -e
          mkdir -p dist
          PROMPT="${{ steps.derive.outputs.prompt }}"
          SCRIPT="scripts/generate_site.js"
          if [ ! -f "$SCRIPT" ] && [ -f "scripts/generate_site-3.js" ]; then
            SCRIPT="scripts/generate_site-3.js"
          fi
          if [ -n "$PROMPT" ]; then
            echo "Running with prompt:"; printf '%s\n' "$PROMPT"
            node "$SCRIPT" --prompt "$PROMPT"
          else
            echo "No prompt provided; building with default."
            node "$SCRIPT"
          fi

      # Always publish your edited homepage
      - name: Publish homepage from root
        shell: bash
        run: |
          mkdir -p dist
          cp -f index.html dist/index.html

      # Include static assets (SVGs, logo, etc.)
      - name: Copy assets
        shell: bash
        run: |
          if [ -d assets ]; then
            mkdir -p dist/assets
            cp -f assets/* dist/assets/ || true
          fi
          if [ -f logo-buds-at-work.png ]; then
            cp -f logo-buds-at-work.png dist/
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
